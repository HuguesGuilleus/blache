// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package webData generated by go-bindata.// sources:
// web/index.html
// web/style.css
// web/app.js
package webData

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xe3\x20\x10\x86\xcf\xe6\x29\xd8\xb9\xaf\x6d\xed\x5e\x56\x2b\xe0\x90\xdd\xd5\xf6\xd6\xaa\xca\xa5\x47\x82\x27\x86\x76\x6c\x10\xe0\x56\x79\xfb\x0a\x93\x28\x6d\xaa\x48\x39\x61\xfe\xf9\xe7\x9b\xf1\x0c\xe2\xdb\xdf\xfb\x3f\xdb\xa7\x87\x7f\xdc\xe6\x89\x14\x13\xe5\xe0\xa4\xe7\x51\x02\xce\xa0\x18\x13\x16\xf5\xa0\x58\x23\x26\xcc\x9a\x1b\xab\x63\xc2\x2c\x61\xc9\xfb\xef\xbf\xa0\xe8\xd9\x65\x42\xb5\x21\x6d\x2c\x8a\xae\xde\x58\x23\xc8\xcd\x2f\x3c\x22\x49\x48\xf9\x40\x98\x2c\x62\x06\x6e\x23\xee\x8f\x4a\x6b\x52\x5a\x01\xc9\x44\x17\x32\x4f\xd1\x48\xd0\x21\xb4\xcf\x09\x2e\xeb\xf0\x01\xf7\x18\x95\xe8\xaa\x57\x31\xd1\xd5\xb6\x98\xd8\xf9\xe1\x50\x28\x0b\x71\x37\xc8\xec\x08\xb7\x87\x80\xff\xa3\x5f\x82\x62\x4d\xe9\x83\x1b\xd2\x29\x49\x38\xc5\xe0\xa3\x71\x43\xde\x14\x5f\x23\xdc\x34\xd6\x1e\x76\xe4\x4d\xd7\xb7\x7d\x1b\xe6\x11\xb8\xa6\x2c\x01\xaa\x25\xa8\x62\x17\xdd\x6d\x64\xe7\x27\xbc\x44\x17\xed\x2a\xbb\x04\x6f\x84\xdf\xa1\x1b\x6d\xbe\xa0\xdb\x55\xbc\x86\xaf\x29\x95\x2f\xba\x85\xce\x43\x33\xde\xc7\x21\x1d\xcb\xaa\x47\x1c\x9d\x9f\x7f\x73\x91\x82\x9e\xcf\xe1\x2a\x97\x15\x04\x5d\x0e\x72\xa7\x84\x32\x93\x2f\xf6\x75\xae\x9f\xcd\xa7\xa2\x46\xcf\xaf\x3a\x15\x2b\xd4\xcf\x1f\x03\xf0\x37\x37\x64\x2b\xe1\x67\xdf\x03\xaf\xff\x51\x2f\x4a\x74\xd5\x54\x76\x5e\x77\x5d\x96\xbf\x3e\xd6\xf7\x00\x00\x00\xff\xff\x43\x22\xb9\x10\xbd\x02\x00\x00")

func webIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webIndexHtml,
		"web/index.html",
	)
}

func webIndexHtml() (*asset, error) {
	bytes, err := webIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/index.html", size: 701, mode: os.FileMode(420), modTime: time.Unix(1588669704, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\x6f\xd4\x30\x10\x86\xcf\xf1\xaf\x18\x89\x5b\xa5\x6c\xb7\xc0\x01\x39\x12\x17\xa8\x10\x12\x52\x11\xec\x85\xa3\x37\x9e\x78\x47\xeb\x78\x2c\xdb\x6d\x37\xa0\xfc\x77\xe4\x7c\x74\x13\x14\x7a\xdc\x55\x66\xe6\x79\xde\xd7\x47\xd6\x1d\xfc\x11\x45\xab\x82\x21\x27\x61\xef\x2f\x95\x28\xbc\xd2\x9a\x9c\x99\x7f\xf2\x13\x86\xc6\xf2\xb3\x84\x13\x69\x8d\xae\x12\x45\xc3\x2e\x95\x8d\x6a\xc9\x76\x12\xa2\x72\xb1\x8c\x18\xa8\xa9\x44\x51\xb3\xe5\x20\xe1\x68\x55\x7d\xae\x44\x2f\xc4\xed\x0d\x7c\x7a\x78\xf8\xf1\xf9\x27\xdc\xdc\x0a\xf1\xa6\x66\x0e\x3a\xe6\x9b\x9e\x23\x25\x62\x27\xa1\xa1\x0b\xea\x4a\x14\x16\x9b\x24\x61\x5f\x89\x22\xb1\x97\xf0\x16\xf3\xf5\x23\x07\x8d\xa1\x0c\x64\x4e\x49\x42\x64\x4b\x1a\xf6\xbb\x77\x78\x01\xad\xc2\xd9\x04\xec\x96\xc4\x77\xc3\xcc\x80\x17\xe9\x37\x4a\xb0\x2a\x18\xcc\xbb\x29\xa6\x32\xa6\xce\xa2\x04\xc7\x2e\xff\x95\xf0\x92\x4a\x65\xc9\x38\x09\xc3\xfa\x7c\x4d\xd5\x67\x13\xf8\xd1\x69\x09\x9a\xda\x71\x7d\x7f\xe5\xb6\xf4\x31\x7a\xe5\x32\xbf\xa6\xe8\xad\xea\x24\x90\xb3\xe4\xb0\x3c\x5a\xce\xca\x45\x4b\xae\x7c\x26\x9d\x4e\x12\xee\x46\x85\xe5\xa1\xec\x38\xe7\x72\xf8\xfa\xed\x1e\x0e\xbf\xbe\xdf\x8f\xd1\x24\xb2\x78\xe8\x3c\x7e\x09\xfc\xe8\x5f\x4b\x68\x0e\x26\x25\x6e\xc7\xbc\x5e\xfa\x5b\xb5\xb7\xa9\xdd\x0b\xb1\x9b\x2f\xbd\xaa\xb1\x58\x39\x75\x30\xb4\xf2\x9f\x06\x9e\x30\x24\xaa\x95\x9d\x3d\x47\xba\x15\xce\xee\xfd\xc8\xbd\x15\xf1\x46\x65\xfd\x95\x53\x9e\xf2\x1b\xcc\xb4\xcb\xe1\x97\x72\xae\x3e\xd4\x9a\x95\xd3\x2c\x33\xf5\xf1\x21\x03\xac\x06\xfc\xea\xf3\xe9\x61\x6c\xa7\x39\x18\xef\xff\xa9\xb3\x46\x97\x30\xac\x97\x4e\xb4\x7e\x8b\xa4\x17\x7f\x03\x00\x00\xff\xff\x9e\xa4\x09\xf8\x73\x03\x00\x00")

func webStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_webStyleCss,
		"web/style.css",
	)
}

func webStyleCss() (*asset, error) {
	bytes, err := webStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/style.css", size: 883, mode: os.FileMode(420), modTime: time.Unix(1588683719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\x6d\x93\xdb\x36\x0e\xfe\x9e\x5f\xe1\xe8\xe6\x6c\x32\xe6\x6a\x6d\x6f\x9a\x9b\xb1\xc2\x64\xda\x66\xa7\x97\xbb\xb4\xc9\x64\xdb\x6b\xb2\x1e\x9f\x87\x96\x68\x9b\x5d\x59\xd4\x48\xf4\xbb\xf5\xdf\x6f\x40\x52\x94\xfc\xb6\xd9\xde\xf4\x8b\x25\x91\x20\x00\x02\x0f\x40\x80\x5e\xb2\xac\x31\x1a\xb1\x15\x13\x8a\x67\x14\xa9\x99\xc8\x9b\x4d\xf8\xf5\xdd\x28\xde\xef\x27\x8b\x24\x54\x42\x26\x7a\xfe\xfb\x6c\x4a\x46\x2c\x9b\x2e\xe6\x3c\x51\x39\xf9\x44\xa6\x3c\xe1\x19\x53\x32\xc3\xbb\x92\xb0\xc1\x22\x99\x2a\xb4\x64\xf1\x82\xe3\x5d\xc6\xd5\x22\x4b\x1a\xfa\xab\x21\x92\x5c\xb1\x24\xe4\x72\xd2\xf8\xf4\x56\x0f\xf5\x13\xbe\x6a\x7c\x42\x4e\x48\xc6\x73\x19\x2f\xf5\x3a\xfd\x62\xd9\x04\x05\x0e\x8a\x67\x96\x57\xc2\x57\xe8\xd3\x7e\x8f\x3e\xd1\x4f\x99\x9c\x8b\x9c\x63\x7c\xc2\x80\x64\xfc\x0f\x1e\xaa\x9a\x56\x93\x45\x3c\x11\x71\xcc\xa3\x52\x33\x95\x6d\x76\xb9\xe2\x29\x72\x7b\xf0\x13\xbe\x2e\x15\xc7\x41\x11\x32\x15\xce\x90\xd6\x05\x78\x21\x50\xa3\x78\xe6\x18\x9a\xd1\xc7\xf8\x0d\x3c\x35\xcb\xe4\xca\x1b\x3e\x99\xa7\x5e\x9f\xf1\x7c\x11\x2b\x6d\x82\x45\xac\xfc\x48\x26\xfc\x6d\x69\x0e\x3b\x66\xf8\xf5\x8d\xa5\x0f\xc6\x7c\x35\xe3\x09\x72\x9b\x25\xa5\x96\x60\x3f\xcd\xbd\x52\x8f\x56\x1b\x67\x69\x1a\x6f\xce\x78\x78\xbf\x1f\x0c\x31\x36\x76\xc1\xc6\x0b\x81\x81\x4d\xc5\xe5\x10\x38\x15\x20\xce\x40\x67\x2c\xa3\x0d\xde\x69\x06\x74\x17\xb3\x31\x8f\xfb\x1d\x92\xf3\x44\xf5\x1d\x29\xde\x89\x09\x52\x83\xce\xb0\xd9\xc5\xda\x7a\x0d\x35\xe8\x0e\x03\xeb\x7a\xfd\x5e\x10\x95\x6d\xf2\xfe\x60\x48\x64\x0a\x8f\x82\x4c\xc8\x86\x28\x32\x2d\xa9\xa6\x74\x07\x1a\xf7\x97\x3c\x1b\xa3\x0e\x26\xd6\x0d\xe6\xbb\x8b\x89\x67\xe8\xec\x40\x0f\x17\x44\x6d\x52\x00\xe5\xdd\x66\x3e\x96\x31\xa5\xd4\x2b\xf5\xf1\x9a\x4d\x34\x1d\x98\x71\x1f\x22\x02\xb6\x36\xa4\x35\x75\x4b\xcd\x66\x22\x0f\x0a\x4c\xa6\x81\x73\xa6\xe6\x9e\x38\x0a\xb7\x66\xe9\x86\xb4\x43\x06\x09\x59\x0e\xc1\xb0\xc7\x38\x90\xa9\x36\xc6\xc4\xda\x01\x22\xe5\xd7\x4d\xca\x6f\xb3\x4c\x66\xc8\xfb\xa9\x34\x74\x43\xe4\x0d\x16\x67\x9c\x45\x9b\x06\x5f\xf3\x70\xa1\x44\x32\xf5\x3d\x1c\xac\x66\x22\xe6\x68\x84\x01\x98\xc0\x87\x76\xc9\xa6\xd9\x44\x8a\xca\x14\xec\xdb\x7b\xbb\x19\x94\x96\x18\xf6\xf5\x18\x8c\x58\xc8\xee\xf7\x08\x29\x5a\xa3\xc0\xcd\xa6\xf2\x43\x16\xc7\x68\x83\x49\x07\xf7\x37\x1a\x15\xb8\xd9\x7c\x8e\x14\x2d\x67\x88\x4c\x07\x5d\x40\x0c\x80\x16\x97\xa6\x09\xc4\x04\x6d\x68\x87\x28\x2c\x53\x3a\xb0\xd2\x89\x45\xec\x30\xc8\x57\x02\x82\x42\x8f\xe3\x5d\xc8\x72\xde\xe8\xf4\xf5\xa3\xdb\x07\x65\x83\x71\xc6\xd9\x43\xa0\x47\x5e\xf6\x47\xbe\x06\x4e\xbb\x6d\xbd\xbd\x33\x79\x44\x0b\x26\x20\xb6\x3f\x61\x71\xce\x0b\x43\xff\x5d\x8d\x7e\x43\x35\x51\x00\x4a\x74\x86\x41\x28\x13\x25\x92\x05\x37\x84\xff\xe8\xcb\x94\x8e\x7c\x99\xe6\x7e\x2a\x53\x84\x83\x91\x0f\x28\xb3\x1f\x8e\x36\xe2\x13\xb6\x88\x55\x5f\x4c\x10\xec\xdb\x10\x11\x30\x40\xcc\x93\xa9\x9a\xbd\xe9\x34\x9b\x6a\x50\x7e\x5d\x75\xc1\x6c\x66\x67\x94\xd2\x57\xfb\x7d\xf9\xda\xc3\x78\x37\xa2\x9d\x8a\x71\xf1\x4c\x4c\x1c\xe1\x4d\xb3\x89\x9e\xab\xfd\x1e\x69\x85\xdf\xe8\x70\x68\xea\xf7\xd7\x6a\x70\x33\xc4\xb0\xd8\x6c\xcb\x6e\xc9\x58\xe8\x80\xc7\xab\x66\xd3\xd2\xbc\x86\xa8\xa9\x56\xe8\x18\xaa\xd9\x55\xaf\x52\x75\xea\xde\x01\x75\x6f\x18\x58\xbb\x2c\x72\xf0\x12\x3e\x58\x07\xc4\xdf\x36\x5b\xf1\x4c\xa6\x14\xa2\xdf\xe0\xc4\x25\x9a\x7a\x46\x04\xb7\xbc\x22\x7c\x18\x6c\x68\x27\x28\x26\x22\x61\x71\xbc\xd9\x4d\xa8\x82\x4f\xb7\xb3\xe6\x77\x36\x1c\xcc\xc6\x8f\x31\xd0\x19\xbe\xd5\x13\xfd\xa5\x14\x51\xa3\x63\x00\xa1\xb2\x05\x2f\x82\xa2\xa8\x42\x73\x91\xf3\xec\x9d\x5c\x25\xb1\x64\x11\x1a\x93\x84\xcd\xb9\xc9\x4b\x0b\xfa\xdb\xe7\x0f\x7e\x98\x71\xa6\xf8\xc7\x31\xa4\xce\xdf\x3e\x7f\x40\x63\xac\xb3\x1e\xa3\x91\x0c\x75\x62\xb4\x14\xb7\x31\x87\x2f\xd4\x62\x2d\x1c\xb8\x39\xbd\x4f\x96\xa6\x3c\x89\x7e\x9c\x89\x38\x42\x0c\x07\xcc\x9f\x65\x7c\x42\x17\x01\xf3\x23\x2b\x97\x82\xd4\x80\xf9\x61\x2c\xc2\x07\x04\x24\x19\x9f\xcb\x25\x47\x38\x00\x1d\x32\xbe\x94\x0f\x35\x1d\x16\x90\xc1\x41\x8b\xcf\xb7\x3f\xbd\xff\xf8\xcb\xe8\xee\xfd\xfd\x2d\xed\xbe\x7a\x71\xd3\xd3\xba\xfd\x2a\x62\x0e\xd9\x21\xa8\x8e\xc2\x72\x08\xef\xca\xb7\x81\x37\x8e\x65\xe8\x0d\xa9\x79\x06\xb5\x71\x21\xe7\x5c\x4f\xe8\x97\xda\xcc\x8c\x8b\xe9\x4c\xc1\x94\x7d\x0b\x0a\xec\x58\xef\xf7\xee\x95\xee\x0a\x6c\xcc\x74\x2f\xe5\xbc\xa6\x06\x7c\xe2\x1d\xfc\x0e\xf4\x8f\x27\x12\x6f\x48\x3b\x43\x0a\x2f\x41\x6d\x5c\x2e\x40\x4c\x77\x48\xf5\x1b\x88\x81\xf1\xfd\x5e\x3f\x2a\xf6\xff\x11\x7c\x05\xf5\x4a\x2d\x07\x3b\xbf\x9a\x39\x24\x22\x32\xb3\xe7\x0c\x40\x8d\xea\xe4\xac\x0f\xa8\x54\xe6\x5f\x68\xc7\xbd\xdf\x97\xef\xb9\xd8\x72\x5a\xb3\xac\x19\x35\x09\x5f\xc8\xa4\x24\x8b\x45\xae\x3e\xf3\xa9\x90\x49\x4e\x07\x43\x33\x16\xb2\x64\xc9\xf2\x0a\x1a\x53\xae\x2c\x2e\x7e\xd8\xbc\x8f\x90\x88\x30\xe4\xbf\x3a\x29\xa5\xc9\x22\x8e\xf1\x33\x03\x64\x4f\x44\x8d\x44\x36\xe6\x10\x07\x9e\x65\xa9\xd6\xb4\xb6\x00\x58\xfe\x28\x13\x05\xa7\x70\xab\x17\xb5\x6a\x0c\xd5\xfa\x98\x5b\x22\x1b\x66\x55\x23\xd4\x4b\x2c\x4b\x91\x08\xf5\xa1\xd2\x1e\x61\x33\x3c\x63\xf9\xec\x8e\x2b\x34\xb3\xdf\x00\xc0\x9f\xe5\x22\xe7\x25\x41\xc6\xc1\x34\x08\x07\x2b\x91\x44\x72\xe5\xb3\x28\xba\x5d\xf2\x44\xf3\x82\x13\x08\x79\x80\x65\x8f\x9c\x9e\x88\xa3\xc3\xf5\xc5\x23\x2c\x0c\xd1\xd3\x98\x14\xcf\x8c\x93\xfd\x34\x93\x4a\xc2\xc1\x6d\xa7\xeb\x87\x72\xdd\x78\x2b\x11\xa9\x19\xb5\xb2\x45\x92\xf0\xec\x77\x18\xa9\x3b\xcf\x37\xd0\x3e\x20\xfa\xa7\x1e\x32\x54\x51\xc6\x56\xdf\xc7\x31\x28\x10\x9c\x48\xb7\x93\x27\xe2\x1d\x78\xda\xed\x2a\x37\xc4\x32\xd4\x63\xda\xf0\xd4\xb9\xe0\x27\xae\x4a\x83\x87\x6a\xed\x43\xed\x76\xa7\x36\x31\x87\x40\x65\xe1\x83\x77\x38\xf5\x19\x2a\xc7\x0e\xe9\x90\x93\x6d\x92\xd3\x4d\xe1\x60\x22\x33\x04\xb1\xb0\xa6\x57\x0e\xeb\xc1\xfa\xf5\xc9\xe2\x76\x6d\xb6\x4d\xdd\x07\xde\x95\x0c\xb6\x75\x06\xdb\xd7\xa7\xb2\x6a\x1c\xb6\x07\x1c\x9c\x15\xdf\xcf\xd9\x94\xa3\x35\xd9\x42\xdd\x7b\xc1\x98\x9a\xa6\x32\xa7\x91\xf0\x85\x98\xe7\x7d\x05\x8d\xb2\x49\xd1\xa1\x40\x6c\xc2\xb7\x8f\x9a\x33\x40\x73\xa1\x48\x4c\xa2\x35\x89\xb6\x64\x4d\xb6\x44\xcc\xa7\x84\x43\x19\x35\xea\x06\x8e\x9b\xab\x5c\x0d\x3f\xc7\x61\xc4\xf0\xce\x96\x28\x23\x66\x4e\x45\x57\xa5\x08\x45\x0f\x7d\x1d\xc4\xd5\xb6\x83\x68\x4d\xad\xf2\x57\x3f\x33\x35\xf3\xd9\x38\x47\x2e\x0b\xfd\x3d\xc6\x41\xb4\xb5\x04\xf7\xa7\x04\xf7\x40\x50\x0a\xa4\xdd\xc0\x16\x44\x23\x66\x0f\x58\x38\x8c\x07\x5d\x72\x43\xc8\xcb\x21\x0e\x6c\xbe\xc8\x55\xf4\xa3\x94\x59\x54\x89\xb1\x66\xfb\x82\x83\xed\x05\x92\x7b\x67\xd9\x32\xe2\x75\x86\xb8\x5d\x8b\x5c\x19\x4f\x19\x13\x0d\x5e\x92\xf2\xe8\x82\x61\x03\x35\x55\x9e\x31\x43\xa3\x60\xaf\x2f\xe6\x53\x3a\x62\x3e\x54\xf5\xa8\x4a\x54\xce\x40\xcf\x29\x15\x0a\xdb\x56\x0e\x6a\x0b\x87\x6c\x01\x6e\xbf\x9b\x4b\xa9\x66\x22\x99\xde\x26\x6c\x1c\xf3\x88\xea\x62\xae\x22\xaa\x30\x04\x3e\x34\x1e\x8d\x49\x5c\x8b\x9d\x5c\x65\xf2\x81\xdb\xe8\xc9\x78\x54\x8b\x9d\x58\x24\x5c\xc7\x3e\xbd\xf1\x3b\xe5\xae\x6e\xc8\x4b\xab\xfb\x4d\xdf\x62\xe2\xff\xd3\xff\x40\xb0\xcc\x58\x32\xe5\x97\xc4\x77\xfc\xde\xa9\xf8\x97\xfd\x23\x56\x48\xf7\xc6\x4c\xcd\x7a\xef\x90\xf7\xb3\xd7\x8e\xd6\x6d\xaf\xe1\xb5\xa3\x6d\xdb\x6b\x2c\xbd\x76\xdc\xf6\x1a\x33\xf3\x58\x7a\xed\x2b\x78\x6e\x3d\xec\xbc\xd5\x1b\x06\x45\x61\x5b\xb6\x93\x30\x2b\x41\x50\x45\x59\x2a\x73\x8b\x03\x17\x60\x1a\x92\x93\x58\xca\x0c\xc1\x74\xdb\x4e\x5f\x57\x71\x7d\x8e\xf5\xd1\x41\x73\xa6\x55\xfa\x33\x81\x3b\x62\x4f\x08\xd0\x71\x15\xa0\xe3\xa3\x00\x1d\x31\x73\xf8\x3b\x08\x4f\x38\xd0\x79\x16\xe4\xfe\x1f\xb9\x4c\xbc\x12\xbc\xdd\xbe\x23\x03\x4e\x06\x02\x58\xd3\xa0\x0a\xe0\x10\x93\xb5\xfd\x39\xc2\xe3\xa3\xe2\x29\x7e\xa8\xc7\x5a\x65\x29\x08\x3a\xe8\xd8\x9e\x1f\xd7\x1c\xbe\x48\xc2\x78\x11\xf1\x1c\x79\xc8\x6b\xaf\xdb\x1e\xf1\xda\xdb\xb6\x87\x3d\x0c\x29\x56\x1f\xff\x86\x63\x23\x92\x3c\x6f\x24\x52\x35\x38\xb0\xf6\x82\x73\xb9\xd6\x1e\x3c\x67\x3c\x34\x56\x92\xa1\x7f\xdd\x7d\xfc\x05\x90\x28\x92\xa9\x98\x6c\xd0\x6e\xdd\xaf\x92\xca\xb6\x5f\x65\x8f\xbc\xef\x00\x41\x54\xff\x20\x2b\x40\xc9\x76\x41\xf0\x5d\x5d\xb0\x2d\xd6\xc2\x00\x5a\xd5\x90\x6a\xc9\x29\xcb\x72\x8e\x98\x92\x63\x34\xf3\x33\x9e\xc6\x2c\xe4\xe8\xfa\xbf\x7f\xbb\x26\x9e\x87\x31\xde\xef\x77\xd0\x31\x9b\xee\x61\x84\x77\x21\xd5\xdf\x07\xe2\x29\x0a\x7d\xd5\x10\x89\x2b\x8e\xf1\xdb\xd0\x57\xfd\xf2\xcb\x87\x22\xb8\x56\x16\xfe\xb2\x98\x8f\x79\x86\x42\x7f\x8d\xf7\xfb\x7a\x8d\xe8\x26\xb6\xd5\x84\xae\x38\xdc\x44\x8e\xf7\xfb\x93\xea\xf1\xd1\xaa\x21\x9c\x41\x82\x70\xc5\x73\x75\x55\x62\x2e\x40\x28\x3d\x4c\xaf\x36\xe1\x04\x87\xfb\x7b\x4a\x79\xb2\x95\x72\x7e\x60\xec\xad\x8b\x96\xad\x0d\x93\xaa\x2c\xaf\x5c\x49\x75\xf4\xcf\x85\xb9\xbc\xd1\x43\x2f\x7a\xa4\xb6\xc7\x17\xdd\x0e\xae\x77\xe6\xc0\xc4\x97\x0b\x75\xc2\x82\xad\x2b\x16\xd7\x07\x2c\xae\xbb\xaf\x5c\x33\x79\x46\x73\xa8\x45\xff\xcd\x37\x95\xe6\x0f\x7c\x73\x52\xd5\xc3\xe7\x84\xee\x5a\xdf\x67\x99\x5c\x7d\xe0\x13\xd5\xea\x5f\xaa\x22\xc1\xc9\x57\xf5\x22\xff\xba\x17\x14\xc4\xac\xfc\x0c\xe5\xcb\xe3\x4b\xdb\x17\x96\xfe\x96\x3e\xba\xee\xfe\x92\x48\xe8\x3f\x1f\x5f\x79\x46\xe2\xd5\xe5\x15\xd6\xd1\xa8\x74\x04\x06\xfa\xf6\xd3\xe8\x8d\xf7\xf5\x8a\x4e\xab\x5f\x6f\xad\x46\xf5\xb6\x69\x54\xef\x9b\x46\xe7\x1b\xa7\x02\x93\x56\x7e\x59\xaa\xad\x17\x95\xfc\x21\x96\xe3\x4a\xd0\xd8\x91\x1d\xb5\xe6\x67\x2a\x67\x99\x2b\x68\x9d\xdb\xde\xc8\x6b\x8f\x0e\x6b\x9a\x4a\x5b\xd2\xc1\x6d\xcf\xbf\x4c\x70\x6f\x08\xd2\x64\xea\x99\xe4\x5c\x0c\x1e\xf8\x66\x08\x07\xfe\xf3\x89\x0b\xb7\xc9\x69\x5a\xbf\x00\x54\xdd\x34\xd1\xe3\xd3\xeb\xa8\xfb\xb4\x9b\x3f\x69\x80\x5a\x73\x58\x0d\x6c\x5a\xd5\xb1\xc6\x81\xc4\x9c\x03\xfa\xd5\x1f\x2f\x94\x92\x49\xee\x94\xab\xa3\xda\x50\x00\x07\x30\xd6\x97\x17\x75\xe0\x2c\x05\x5f\x99\x82\xb4\x0e\xca\xc3\x15\x5f\x2f\xac\xd0\xc5\x33\x54\x74\xae\x36\x99\x72\xa5\x0b\xb0\x77\x4c\x31\xdd\x84\x8c\x4e\xbb\x90\xd1\xb9\x36\x64\x74\xbe\x87\xf9\xf3\xcb\xd3\x45\x4d\x03\x5d\xca\x1f\x6e\xfe\xe8\xfb\xab\xf6\xef\x13\xec\xbf\x48\x5b\xe4\x04\xf9\x35\xc7\x9b\xeb\x87\x98\xe5\xea\xf7\x19\xe7\x31\x85\xf2\xec\x1d\x53\xae\x55\xbe\xc8\x7d\x05\xe4\x67\x3d\x6b\x34\x8d\x78\xac\xd8\x57\x4a\x69\xc7\xf9\x16\x24\x25\x72\x55\x97\x21\x26\x28\x91\x2b\x73\x69\xfa\x71\x82\xf0\x95\xd3\xa4\x1a\x7b\xd3\xed\x74\x4a\xcd\xcb\xf8\xae\xcb\x78\xd3\x79\xeb\xf2\x74\x3d\xee\x4f\xf6\xfa\x2d\x8b\x79\x0e\xb1\xb5\xae\x9d\x1f\xe7\xb0\x4c\x24\x4a\xc7\x5d\x8e\xb8\xbf\x26\xdc\xdf\x5c\x2a\x84\x6a\xa4\x55\x10\xcd\xd7\x64\xbe\x35\x91\x94\x5d\x6e\x70\xe6\x6b\xe3\x98\xec\x72\x83\x33\xdf\x1a\x92\xf1\x9a\x56\x0b\xdb\xf3\x35\x7e\x04\xf5\xe3\x6d\x45\x7b\xdf\x9e\x6f\x2f\xd1\x5e\xba\xf7\x69\x85\x7a\x37\xa6\x72\x6b\x61\x5f\xf1\xb5\xb9\xc4\x49\x14\x85\xea\x2d\x33\xe5\x5b\xa6\xeb\xb7\x6f\x71\xf9\x21\x96\xe1\x19\x1e\x63\xc3\x63\x6c\x78\x14\x65\xa9\x6c\xac\x1b\x14\x08\xe3\xea\xca\xf3\xb0\x77\x73\x9e\xd2\x3d\x86\xf9\x1b\xed\xf2\x9f\x68\x3a\x0b\x68\x2c\x9a\xde\x0b\x07\xc2\xcf\xb3\x90\xaa\xb6\x77\xad\xeb\x50\x5f\xd7\xa1\x3a\x9b\x06\xc2\x97\xe6\x7e\xf3\xf4\x08\x28\xff\xc5\x12\x80\x01\xa0\xd3\x0d\xd7\x59\x42\xfd\xef\x98\xbe\xd8\x0a\x0a\x73\xed\x03\x4a\x80\xd9\xb5\x1e\xf6\xa2\xaf\x65\xf0\xd9\x8b\x5a\xe7\x0e\x0a\x96\xcf\xf0\x65\xcb\x96\x55\x94\xb5\xed\x29\xc4\xf5\xc5\xec\xb9\x4b\x29\xed\xfc\xc3\x02\x0e\x1d\x14\x95\x1a\xe5\xdf\x16\x2c\xe4\x9c\xff\x95\x92\x81\xdf\xd3\x44\x9b\xcb\xad\xbf\x50\x76\x99\xa5\x1f\xbb\xe5\x7b\xe0\x1b\x00\xa1\x77\x92\x08\xeb\x02\x6c\xd1\x67\xb3\x16\x54\x7c\xc0\xf3\x7f\x01\x00\x00\xff\xff\xb6\x80\xdd\x13\xab\x1e\x00\x00")

func webAppJsBytes() ([]byte, error) {
	return bindataRead(
		_webAppJs,
		"web/app.js",
	)
}

func webAppJs() (*asset, error) {
	bytes, err := webAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/app.js", size: 7851, mode: os.FileMode(420), modTime: time.Unix(1588687923, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/index.html": webIndexHtml,
	"web/style.css":  webStyleCss,
	"web/app.js":     webAppJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"app.js":     &bintree{webAppJs, map[string]*bintree{}},
		"index.html": &bintree{webIndexHtml, map[string]*bintree{}},
		"style.css":  &bintree{webStyleCss, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
